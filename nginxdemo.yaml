apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deploy
  namespace: default
  labels:
    app: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginxdemos/hello
        ports:
        - containerPort: 80

---

apiVersion: v1
kind: Service
metadata:
  name: nginx-svc
  namespace: default
spec:
  selector:
    app: nginx
  ports:
    - targetPort: 80
      port: 80 
 
 ---
 
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx
  annotations:
    ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nginx-svc
            port:
              number: 80
              
### Emaple Ingress code : Path based routing          
#apiVersion: networking.k8s.io/v1
#kind: Ingress
#metadata:
#  name: my-ingress
#  annotations:
#    nginx.ingress.kubernetes.io/rewrite-target: /
#spec:
#  rules:
#  - http:
#      paths:
#      - path: /app1
#        pathType: Prefix
#        backend:
#          service:
#            name: app1-service
#            port:
#              number: 80
#      - path: /app2
#        pathType: Prefix
#        backend:
#          service:
#            name: app2-service
#            port:
#              number: 80
#




### Emaple Ingress code : Domain based routing 
#apiVersion: networking.k8s.io/v1
#kind: Ingress
#metadata:
#  name: domain-routing
#spec:
#  rules:
#  - host: domain1.com
#    http:
#      paths:
#      - path: /path1
#        pathType: Prefix
#        backend:
#          service:
#            name: service1
#            port:
#              number: 80
#      - path: /path2
#        pathType: Prefix
#        backend:
#          service:
#            name: service2
#            port:
#              number: 80
#  - host: domain2.com
#    http:
#      paths:
#      - path: /
#        pathType: Prefix
#        backend:
#          service:
#            name: service3
#            port:
#              number: 80
